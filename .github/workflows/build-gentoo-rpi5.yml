name: Build Gentoo Raspberry Pi 5 Image

on:
  push:
    branches: [ main, master ]
    paths:
      - 'scripts/**'
      - 'Dockerfile'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'scripts/**'
      - 'Dockerfile'
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      kernel_url:
        description: 'Custom kernel URL (overrides default)'
        required: false
        type: string
      enable_debug:
        description: 'Enable debug logging'
        required: false
        default: false
        type: boolean

env:
  DOCKER_BUILDKIT: 1
  IMAGE_NAME: gentoo-rpi5-builder

jobs:
  setup:
    name: 🔧 Setup Build Environment
    runs-on: ubuntu-24.04-arm
    environment: linux-raspi-6.15.y
    outputs:
      timestamp: ${{ steps.metadata.outputs.timestamp }}
      short_sha: ${{ steps.metadata.outputs.short_sha }}
      kernel_url: ${{ steps.config.outputs.kernel_url }}
      kernel_source: ${{ steps.config.outputs.kernel_source }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Generate build metadata
        id: metadata
        run: |
          echo "📋 Generating build metadata..."
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          SHORT_SHA=${GITHUB_SHA:0:8}
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "✅ Build ID: $TIMESTAMP-$SHORT_SHA"
          
      - name: Configure kernel source
        id: config
        run: |
          echo "🔍 Determining kernel configuration..."
          if [ -n "${{ github.event.inputs.kernel_url }}" ]; then
            KERNEL_URL="${{ github.event.inputs.kernel_url }}"
            SOURCE="manual override"
            echo "🎯 Using manual kernel URL: $KERNEL_URL"
          elif [ -n "${{ vars.KERNEL_URL }}" ]; then
            KERNEL_URL="${{ vars.KERNEL_URL }}"
            SOURCE="environment variable"
            echo "🏷️ Using environment kernel URL: $KERNEL_URL"
          else
            KERNEL_URL=""
            SOURCE="default (linux-raspi-6.15.y)"
            echo "🔧 Using default kernel source"
          fi
          echo "kernel_url=$KERNEL_URL" >> $GITHUB_OUTPUT
          echo "kernel_source=$SOURCE" >> $GITHUB_OUTPUT
          
      - name: Display configuration
        run: |
          echo "📊 Build Configuration Summary:"
          echo "  • Environment: linux-raspi-6.15.y"
          echo "  • Kernel Source: ${{ steps.config.outputs.kernel_source }}"
          echo "  • Kernel URL: ${{ steps.config.outputs.kernel_url || 'Default' }}"
          echo "  • WiFi SSID: ${{ vars.WIFI_SSID || 'Not configured' }}"
          echo "  • WiFi Country: ${{ vars.WIFI_COUNTRY || 'US' }}"
          echo "  • Debug Mode: ${{ github.event.inputs.enable_debug == 'true' && 'Enabled' || 'Disabled' }}"

  build-docker:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-24.04-arm
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Build Docker image
        run: |
          echo "🐳 Building Docker image..."
          echo "Using DOCKER_BUILDKIT=$DOCKER_BUILDKIT"
          
          docker build \
            --progress=plain \
            --tag $IMAGE_NAME:latest \
            --tag $IMAGE_NAME:${{ needs.setup.outputs.short_sha }} \
            .
          
          echo "✅ Docker image built successfully"
          docker images $IMAGE_NAME

  build-gentoo:
    name: 🌸 Build Gentoo RPi5 System
    runs-on: ubuntu-24.04-arm
    environment: linux-raspi-6.15.y
    needs: [setup, build-docker]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create output directory
        run: |
          echo "📁 Creating output directory..."
          mkdir -p output
          ls -la
          
      - name: Run Gentoo build process
        env:
          WIFI_SSID: ${{ vars.WIFI_SSID }}
          WIFI_PASSWORD: ${{ secrets.WIFI_PASSWORD }}
          WIFI_COUNTRY: ${{ vars.WIFI_COUNTRY || 'US' }}
          KERNEL_URL: ${{ needs.setup.outputs.kernel_url }}
          STAGE3_URL: ${{ vars.STAGE3_URL }}
          IWLWIFI_DEBUG: ${{ github.event.inputs.enable_debug == 'true' && '1' || '0' }}
        run: |
          echo "🚀 Starting Gentoo build process..."
          echo "📋 Environment variables:"
          echo "  WIFI_SSID=${WIFI_SSID:-Not set}"
          echo "  WIFI_COUNTRY=${WIFI_COUNTRY}"
          echo "  KERNEL_URL=${KERNEL_URL:-Default}"
          echo "  STAGE3_URL=${STAGE3_URL:-Default}"
          echo "  IWLWIFI_DEBUG=${IWLWIFI_DEBUG}"
          echo ""
          
          echo "🐳 Starting Docker container..."
          docker run \
            --privileged \
            --rm \
            --tty \
            --volume "$(pwd)/output:/build/output" \
            --env WIFI_SSID="${WIFI_SSID}" \
            --env WIFI_PASSWORD="${WIFI_PASSWORD}" \
            --env WIFI_COUNTRY="${WIFI_COUNTRY}" \
            --env KERNEL_URL="${KERNEL_URL}" \
            --env STAGE3_URL="${STAGE3_URL}" \
            --env IWLWIFI_DEBUG="${IWLWIFI_DEBUG}" \
            $IMAGE_NAME:${{ needs.setup.outputs.short_sha }}
          
          echo "✅ Build process completed"
          
      - name: Verify build output
        run: |
          echo "🔍 Checking build output..."
          if [ -d "output" ]; then
            echo "📁 Output directory contents:"
            ls -lah output/
            
            if [ -f "output/gentoo-rpi5.img.xz" ]; then
              echo "✅ Compressed image found: $(du -h output/gentoo-rpi5.img.xz)"
            else
              echo "❌ Compressed image not found!"
              exit 1
            fi
            
            if [ -f "output/gentoo-rpi5.img.xz.sha256" ]; then
              echo "✅ Checksum found"
              cat output/gentoo-rpi5.img.xz.sha256
            else
              echo "⚠️ Checksum not found"
            fi
          else
            echo "❌ Output directory not found!"
            exit 1
          fi

  package-artifacts:
    name: 📦 Package Build Artifacts
    runs-on: ubuntu-24.04-arm
    needs: [setup, build-gentoo]
    if: success()
    steps:
      - name: Create output directory
        run: mkdir -p output
          
      - name: Rename and package artifacts
        run: |
          echo "📦 Packaging artifacts..."
          cd output
          
          # The build-gentoo job should have created files in the shared workspace
          echo "📁 Available files from build:"
          ls -lah ../
          
          # Copy files from the previous job's workspace
          if [ -f "../output/gentoo-rpi5.img.xz" ]; then
            NEW_NAME="gentoo-rpi5-raspi-6.15.y-${{ needs.setup.outputs.short_sha }}.img.xz"
            echo "📝 Copying and renaming: gentoo-rpi5.img.xz → $NEW_NAME"
            cp "../output/gentoo-rpi5.img.xz" "$NEW_NAME"
            
            # Update checksum file if it exists
            if [ -f "../output/gentoo-rpi5.img.xz.sha256" ]; then
              echo "🔐 Updating checksum file..."
              sed "s/gentoo-rpi5.img.xz/$NEW_NAME/" "../output/gentoo-rpi5.img.xz.sha256" > "${NEW_NAME}.sha256"
            fi
          else
            echo "❌ Build artifacts not found!"
            exit 1
          fi
          
          echo "📊 Final artifact listing:"
          ls -lah
          
      - name: Upload final artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gentoo-rpi5-raspi-6.15.y-${{ needs.setup.outputs.short_sha }}
          path: output/gentoo-rpi5-raspi-6.15.y-${{ needs.setup.outputs.short_sha }}.img.*
          retention-days: 30
          compression-level: 0

  summary:
    name: 📄 Build Summary
    runs-on: ubuntu-latest
    needs: [setup, build-gentoo, package-artifacts]
    if: always()
    steps:
      - name: Generate build summary
        run: |
          echo "# 🌸 Gentoo RPi5 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build ID:** ${{ needs.setup.outputs.timestamp }}-${{ needs.setup.outputs.short_sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** linux-raspi-6.15.y" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ needs.build-gentoo.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.build-gentoo.result }}" = "success" ]; then
            echo "🌸 **Build completed successfully! Sakura-chan in her cute skirt approves!** ✨" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🎉 **Sakura-chan in her cute dress celebrates the successful build!** ✨" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📦 Generated Artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- **SD Card Image:** \`gentoo-rpi5-raspi-6.15.y-${{ needs.setup.outputs.short_sha }}.img.xz\`" >> $GITHUB_STEP_SUMMARY
            echo "- **SHA256 Checksum:** \`gentoo-rpi5-raspi-6.15.y-${{ needs.setup.outputs.short_sha }}.img.xz.sha256\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ⚙️ Configuration Used" >> $GITHUB_STEP_SUMMARY
            echo "- **Kernel Source:** ${{ needs.setup.outputs.kernel_source }}" >> $GITHUB_STEP_SUMMARY
            echo "- **WiFi Country:** ${{ vars.WIFI_COUNTRY || 'US' }}" >> $GITHUB_STEP_SUMMARY
            echo "- **WiFi SSID:** ${{ vars.WIFI_SSID || 'Not configured' }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Debug Mode:** ${{ github.event.inputs.enable_debug == 'true' && 'Enabled' || 'Disabled' }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🚀 Next Steps" >> $GITHUB_STEP_SUMMARY
            echo "1. Download the artifacts from the Actions tab" >> $GITHUB_STEP_SUMMARY
            echo "2. Flash the image to an SD card using balenaEtcher or dd" >> $GITHUB_STEP_SUMMARY
            echo "3. Boot your Raspberry Pi 5 and enjoy Gentoo!" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Build Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "😢 **The build encountered an error. Please check the logs above for details.**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🔍 Troubleshooting" >> $GITHUB_STEP_SUMMARY
            echo "1. Check the build logs in each step above" >> $GITHUB_STEP_SUMMARY
            echo "2. Verify environment variables are properly set" >> $GITHUB_STEP_SUMMARY
            echo "3. Ensure the kernel URL (if custom) is accessible" >> $GITHUB_STEP_SUMMARY
          fi