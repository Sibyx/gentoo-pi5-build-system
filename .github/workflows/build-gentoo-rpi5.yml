name: Build Gentoo Raspberry Pi 5 Images

on:
  push:
    branches: [ main, master ]
    paths:
      - 'scripts/**'
      - 'Dockerfile'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'scripts/**'
      - 'Dockerfile'
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      kernel_url:
        description: 'Kernel URL (overrides environment default)'
        required: false
        type: string
        default: ''
      environments:
        description: 'Kernel environments to build (comma-separated)'
        required: false
        default: 'linux-6.15.7,linux-raspi-6.15.y'
        type: string
      enable_debug:
        description: 'Enable IWLWIFI debug logging'
        required: false
        default: false
        type: boolean

env:
  DOCKER_BUILDKIT: 1

jobs:
  prepare-matrix:
    name: Prepare Build Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set kernel environments matrix
        id: set-matrix
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.environments }}" ]; then
            # Manual dispatch with specific environments
            ENVS="${{ github.event.inputs.environments }}"
          else
            # Default environments for automatic builds
            ENVS="linux-raspi-6.15.y"
          fi
          
          # Convert comma-separated list to JSON array
          ENV_ARRAY=$(echo "$ENVS" | tr ',' '\n' | jq -R . | jq -s . | jq -c .)
          echo "matrix={\"environment\": $ENV_ARRAY}" >> $GITHUB_OUTPUT

  build-images:
    name: Build ${{ matrix.environment }}
    runs-on: ubuntu-latest-arm64
    needs: prepare-matrix
    environment: ${{ matrix.environment }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set build metadata
        id: build-info
        run: |
          echo "timestamp=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
          echo "short_sha=${GITHUB_SHA:0:8}" >> $GITHUB_OUTPUT
          echo "safe_env_name=$(echo '${{ matrix.environment }}' | tr '.' '-')" >> $GITHUB_OUTPUT

      - name: Determine kernel URL
        id: kernel-config
        run: |
          # Use manual input if provided, otherwise use environment variable
          if [ -n "${{ github.event.inputs.kernel_url }}" ]; then
            echo "kernel_url=${{ github.event.inputs.kernel_url }}" >> $GITHUB_OUTPUT
            echo "kernel_source=manual override" >> $GITHUB_OUTPUT
          elif [ -n "${{ vars.KERNEL_URL }}" ]; then
            echo "kernel_url=${{ vars.KERNEL_URL }}" >> $GITHUB_OUTPUT
            echo "kernel_source=environment" >> $GITHUB_OUTPUT
          else
            echo "kernel_url=" >> $GITHUB_OUTPUT
            echo "kernel_source=default" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        run: |
          echo "Building Docker image for ${{ matrix.environment }}..."
          docker build -t gentoo-rpi5-builder:${{ steps.build-info.outputs.safe_env_name }} .

      - name: Execute build process
        env:
          WIFI_SSID: ${{ vars.WIFI_SSID }}
          WIFI_PASSWORD: ${{ secrets.WIFI_PASSWORD }}
          WIFI_COUNTRY: ${{ vars.WIFI_COUNTRY || 'US' }}
          KERNEL_URL: ${{ steps.kernel-config.outputs.kernel_url }}
          STAGE3_URL: ${{ vars.STAGE3_URL }}
          IWLWIFI_DEBUG: ${{ github.event.inputs.enable_debug == 'true' && '1' || '0' }}
        run: |
          echo "Starting build process for kernel environment: ${{ matrix.environment }}"
          echo "Kernel URL (${{ steps.kernel-config.outputs.kernel_source }}): ${KERNEL_URL:-default}"
          mkdir -p output
          
          # Run the build process with output streaming
          docker run --privileged --rm \
            -v $(pwd)/output:/build/output \
            -e WIFI_SSID="${WIFI_SSID}" \
            -e WIFI_PASSWORD="${WIFI_PASSWORD}" \
            -e WIFI_COUNTRY="${WIFI_COUNTRY}" \
            -e KERNEL_URL="${KERNEL_URL}" \
            -e STAGE3_URL="${STAGE3_URL}" \
            -e IWLWIFI_DEBUG="${IWLWIFI_DEBUG}" \
            gentoo-rpi5-builder:${{ steps.build-info.outputs.safe_env_name }}

      - name: Generate build report
        if: always()
        run: |
          echo "Generating build report for ${{ matrix.environment }}..."
          cat > build-report-${{ steps.build-info.outputs.safe_env_name }}.md << 'EOF'
          # Build Report: ${{ matrix.environment }}
          
          **Kernel Environment:** ${{ matrix.environment }}
          **Timestamp:** ${{ steps.build-info.outputs.timestamp }}
          **Git SHA:** ${{ steps.build-info.outputs.short_sha }}
          **Debug Mode:** ${{ github.event.inputs.enable_debug == 'true' && 'Enabled' || 'Disabled' }}
          
          **Configuration:**
          - WiFi Country: ${{ vars.WIFI_COUNTRY || 'US' }}
          - WiFi SSID: ${{ vars.WIFI_SSID || 'Not configured' }}
          - Kernel URL: ${{ steps.kernel-config.outputs.kernel_url || 'Default' }} (${{ steps.kernel-config.outputs.kernel_source }})
          - Stage3 URL: ${{ vars.STAGE3_URL || 'Default' }}
          
          **Build Status:** ${{ job.status }}
          
          **Generated Files:**
          EOF
          
          if [ -d "output" ] && [ "$(ls -A output)" ]; then
            ls -la output/ >> build-report-${{ steps.build-info.outputs.safe_env_name }}.md
          else
            echo "No output files generated" >> build-report-${{ steps.build-info.outputs.safe_env_name }}.md
          fi

      - name: Package build artifacts
        if: success()
        run: |
          echo "Packaging artifacts for ${{ matrix.environment }}..."
          cd output
          
          # Rename image file to include kernel version and commit
          if [ -f "gentoo-rpi5.img.xz" ]; then
            mv gentoo-rpi5.img.xz gentoo-rpi5-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}.img.xz
          fi
          
          # Create checksum file
          if [ -f "gentoo-rpi5-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}.img.xz" ]; then
            sha256sum gentoo-rpi5-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}.img.xz > gentoo-rpi5-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}.img.xz.sha256
          fi

      - name: Upload SD card image
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: gentoo-rpi5-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}
          path: |
            output/gentoo-rpi5-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}.img.xz
            output/gentoo-rpi5-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}.img.xz.sha256
          retention-days: 30
          compression-level: 0

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}
          path: |
            build-${{ steps.build-info.outputs.safe_env_name }}.log
            build-report-${{ steps.build-info.outputs.safe_env_name }}.md
          retention-days: 14

      - name: Update job summary
        if: always()
        run: |
          echo "## Build Summary: ${{ matrix.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** ${{ steps.build-info.outputs.timestamp }}" >> $GITHUB_STEP_SUMMARY
          echo "**Git SHA:** ${{ steps.build-info.outputs.short_sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" = "success" ]; then
            echo "🌸 **Build completed successfully! Sakura-chan in her cute skirt approves!** ✨" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Generated Artifacts:**" >> $GITHUB_STEP_SUMMARY
            echo "- SD Card Image: \`gentoo-rpi5-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}.img.xz\`" >> $GITHUB_STEP_SUMMARY
            echo "- SHA256 Checksum: \`gentoo-rpi5-${{ steps.build-info.outputs.safe_env_name }}-${{ steps.build-info.outputs.short_sha }}.img.xz.sha256\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Configuration:**" >> $GITHUB_STEP_SUMMARY
            echo "- Kernel URL: ${{ steps.kernel-config.outputs.kernel_url || 'Default' }} (${{ steps.kernel-config.outputs.kernel_source }})" >> $GITHUB_STEP_SUMMARY
            echo "- WiFi Country: ${{ vars.WIFI_COUNTRY || 'US' }}" >> $GITHUB_STEP_SUMMARY
            echo "- WiFi SSID: ${{ vars.WIFI_SSID || 'Not configured' }}" >> $GITHUB_STEP_SUMMARY
            echo "- Debug Mode: ${{ github.event.inputs.enable_debug == 'true' && 'Enabled' || 'Disabled' }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build failed**" >> $GITHUB_STEP_SUMMARY
            echo "Please check the build logs for details." >> $GITHUB_STEP_SUMMARY
          fi